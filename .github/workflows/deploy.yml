name: Deploy Smultron API

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - stage
          - prod

env:
  AWS_REGION: us-east-1

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run unit tests
        run: bun test tests/*.test.ts

  deploy-stage:
    name: Deploy to Stage
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    environment:
      name: stage
      url: ${{ steps.deploy.outputs.cloudfront_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Node.js (for CDK)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: bun install

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: CDK Bootstrap (if needed)
        run: cdk bootstrap aws://$(aws sts get-caller-identity --query Account --output text)/${{ env.AWS_REGION }}

      - name: Build application
        run: bun run build

      - name: Deploy to Stage
        id: deploy
        run: |
          cdk deploy \
            --context environment=stage \
            --context adminUsername=${{ secrets.ADMIN_USERNAME }} \
            --context adminPassword=${{ secrets.ADMIN_PASSWORD }} \
            --context jwtSecret=${{ secrets.JWT_SECRET }} \
            --context domainName=${{ secrets.DOMAIN_NAME }} \
            --context certificateArn=${{ secrets.CERTIFICATE_ARN }} \
            --require-approval never \
            --outputs-file cdk-outputs-stage.json

      - name: Extract outputs
        id: outputs
        run: |
          CLOUDFRONT_URL=$(cat cdk-outputs-stage.json | jq -r '.["SmultronStack-stage"].CloudFrontUrl')
          API_URL=$(cat cdk-outputs-stage.json | jq -r '.["SmultronStack-stage"].ApiUrl')
          echo "cloudfront_url=$CLOUDFRONT_URL" >> $GITHUB_OUTPUT
          echo "api_url=$API_URL" >> $GITHUB_OUTPUT

      - name: Wait for deployment to propagate
        run: sleep 30

      - name: Run integration tests
        env:
          API_URL: ${{ steps.outputs.outputs.api_url }}
          CLOUDFRONT_URL: ${{ steps.outputs.outputs.cloudfront_url }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
        run: bun test tests/integration/*.test.ts

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-stage
    if: github.ref == 'refs/heads/main'
    environment:
      name: prod
      url: ${{ steps.deploy.outputs.cloudfront_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Node.js (for CDK)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: bun install

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build application
        run: bun run build

      - name: Deploy to Production
        id: deploy
        run: |
          cdk deploy \
            --context environment=prod \
            --context adminUsername=${{ secrets.ADMIN_USERNAME }} \
            --context adminPassword=${{ secrets.ADMIN_PASSWORD }} \
            --context jwtSecret=${{ secrets.JWT_SECRET }} \
            --context domainName=${{ secrets.DOMAIN_NAME }} \
            --context certificateArn=${{ secrets.CERTIFICATE_ARN }} \
            --require-approval never \
            --outputs-file cdk-outputs-prod.json

      - name: Extract outputs
        id: outputs
        run: |
          CLOUDFRONT_URL=$(cat cdk-outputs-prod.json | jq -r '.["SmultronStack-prod"].CloudFrontUrl')
          API_URL=$(cat cdk-outputs-prod.json | jq -r '.["SmultronStack-prod"].ApiUrl')
          echo "cloudfront_url=$CLOUDFRONT_URL" >> $GITHUB_OUTPUT
          echo "api_url=$API_URL" >> $GITHUB_OUTPUT

      - name: Wait for deployment to propagate
        run: sleep 30

      - name: Run integration tests
        env:
          API_URL: ${{ steps.outputs.outputs.api_url }}
          CLOUDFRONT_URL: ${{ steps.outputs.outputs.cloudfront_url }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
        run: bun test tests/integration/*.test.ts
